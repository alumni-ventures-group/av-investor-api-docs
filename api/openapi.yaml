openapi: "3.0.1"
info:
  title: "dev-investor-portal-api"
  description: "Api for Investor access methods"
  contact:
    name: "Tony DiTomasso"
    email: "tony@avgfunds.com"
  version: "2021-09-10T17:12:34Z"
servers:
- url: "https://e56bxipr3d.execute-api.us-east-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "/dev"
tags:
- name: "User Methods"
  description: "Services to access and create users"
paths:
  /api/access-token:
    post: {}
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/fund-investments:
    get:
      parameters:
      - name: "userid"
        in: "query"
        schema:
          type: "string"
      - name: "fund-code"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "base-fund-code"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      security:
      - auth: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/managed-logout:
    get:
      tags:
      - "User Methods"
      summary: "Logout"
      description: "Logout investor user"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "User session specific token for authorization"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogoutResponse"
      security:
      - auth: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/user-tokens:
    get:
      tags:
      - "User Methods"
      summary: "AVRT Tokens"
      description: "Get user tokens total"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "User session specific token for authorization"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400JsonResponse"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500JsonResponse"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserTokensResponse"
      security:
      - auth: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/managed-login:
    post:
      tags:
      - "User Methods"
      summary: "Login"
      description: "Login managed user"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/update-user:
    post: {}
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/user-messages:
    get:
      parameters:
      - name: "userid"
        in: "query"
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      security:
      - auth: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/user-investments:
    get:
      parameters:
      - name: "userid"
        in: "query"
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      security:
      - auth: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/login:
    post:
      tags:
      - "User Methods"
      summary: "Login"
      description: "Login investor user"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /api/basecamp-investments:
    get:
      parameters:
      - name: "fund-code"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      security:
      - auth: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/dashboard-labels:
    get: {}
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/logout:
    get:
      tags:
      - "User Methods"
      summary: "Logout"
      description: "Logout investor user"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "User session specific token for authorization"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogoutResponse"
      security:
      - auth: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/user:
    get:
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      security:
      - auth: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/user-totals:
    get:
      parameters:
      - name: "userid"
        in: "query"
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      security:
      - auth: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/create-user:
    post:
      tags:
      - "User Methods"
      summary: "Create User"
      description: "Method takes in user information and generates new user in Yii\
        \ database."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
        required: true
      responses:
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400JsonResponse"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500JsonResponse"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /api/verify-access-token:
    get: {}
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
components:
  schemas:
    UserResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
        authToken:
          type: "string"
        user:
          type: "object"
      description: "Successful login response object"
    "400JsonResponse":
      type: "object"
      properties:
        message:
          type: "string"
        statusCode:
          type: "number"
    LogoutResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
      description: "Successful logout response object"
    "500JsonResponse":
      type: "object"
      properties:
        message:
          type: "string"
        statusCode:
          type: "number"
    UserTokensResponse:
      type: "object"
      properties:
        tokensTotal:
          type: "number"
      description: "Successful tokens response object"
    CreateUserRequest:
      required:
      - "email"
      - "firstName"
      - "lastName"
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        password:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"
      description: "Request payload for creating user"
    LoginRequest:
      type: "object"
      properties:
        password:
          type: "string"
        email:
          type: "string"
      description: "Payload for login"
  securitySchemes:
    auth:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "custom"
